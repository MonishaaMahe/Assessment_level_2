{"ast":null,"code":"var _jsxFileName = \"C:\\\\project-management-dashboard\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ProjectList from './components/ProjectList';\nimport MilestoneBoard from './components/MilestoneBoard';\nimport TaskBoard from './components/TaskBoard';\nimport TeamManagement from './components/TeamManagement';\nimport Dashboard from './components/Dashboard';\nimport Notifications from './components/Notifications';\nimport Login from './components/Login';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentView, setCurrentView] = useState('dashboard');\n  const [projects, setProjects] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [statusFilter, setStatusFilter] = useState(null);\n  const [allTasks, setAllTasks] = useState([]);\n  const [teamMembers, setTeamMembers] = useState([]);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [showProfile, setShowProfile] = useState(false);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const username = localStorage.getItem('username');\n    const fullName = localStorage.getItem('fullName');\n    if (token && username) {\n      setUser({\n        token,\n        username,\n        fullName\n      });\n      fetchProjects();\n      fetchAllTasks();\n      fetchTeamMembers();\n    }\n    setLoading(false);\n  }, []);\n  const getAuthHeaders = () => {\n    const token = localStorage.getItem('token');\n    return {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    };\n  };\n  const fetchProjects = async () => {\n    try {\n      const userRole = localStorage.getItem('userRole') || 'Admin';\n      const username = localStorage.getItem('username');\n      console.log('Fetching projects for:', username, 'with role:', userRole);\n      const url = `http://localhost:8080/api/projects?userId=${username}&role=${userRole}`;\n      const response = await fetch(url, {\n        headers: getAuthHeaders()\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Fetched projects:', data.length);\n        setProjects(data);\n      }\n    } catch (error) {\n      console.error('Error fetching projects:', error);\n    }\n  };\n  const fetchAllTasks = async () => {\n    try {\n      const userRole = localStorage.getItem('userRole') || 'Admin';\n      const username = localStorage.getItem('username');\n      const url = `http://localhost:8080/api/tasks?userId=${username}&role=${userRole}`;\n      const response = await fetch(url, {\n        headers: getAuthHeaders()\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setAllTasks(data);\n      }\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n  const fetchTeamMembers = async (projectId = null) => {\n    try {\n      let url = 'http://localhost:8080/api/team-members';\n      if (projectId) {\n        url += `?projectId=${projectId}`;\n      }\n      console.log('Fetching team members from:', url);\n      const response = await fetch(url, {\n        headers: getAuthHeaders()\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Team members fetched:', data);\n        setTeamMembers(data);\n      }\n    } catch (error) {\n      console.error('Error fetching team members:', error);\n    }\n  };\n  const addTeamMember = async member => {\n    try {\n      // Check if member already exists for this project\n      const existingMember = teamMembers.find(m => m.userId === member.userId && m.projectId === member.projectId);\n      if (!existingMember) {\n        const response = await fetch('http://localhost:8080/api/team-members', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(member)\n        });\n        if (response.ok) {\n          fetchTeamMembers();\n        }\n      }\n    } catch (error) {\n      console.error('Error creating team member:', error);\n    }\n  };\n  const deleteTeamMember = async memberId => {\n    try {\n      const response = await fetch(`http://localhost:8080/api/team-members/${memberId}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        fetchTeamMembers();\n      }\n    } catch (error) {\n      console.error('Error deleting team member:', error);\n    }\n  };\n  const updateProject = async (projectId, projectData) => {\n    try {\n      const response = await fetch(`http://localhost:8080/api/projects/${projectId}`, {\n        method: 'PUT',\n        headers: getAuthHeaders(),\n        body: JSON.stringify(projectData)\n      });\n      if (response.ok) {\n        fetchProjects();\n      } else {\n        console.error('Failed to update project:', response.status);\n      }\n    } catch (error) {\n      console.error('Error updating project:', error);\n    }\n  };\n  const addProject = async project => {\n    try {\n      console.log('Creating project:', project);\n      const username = localStorage.getItem('username');\n      const response = await fetch('http://localhost:8080/api/projects', {\n        method: 'POST',\n        headers: getAuthHeaders(),\n        body: JSON.stringify({\n          name: project.name,\n          description: project.description,\n          startDate: project.startDate || null,\n          endDate: project.endDate || null,\n          status: 'NEW',\n          createdBy: username,\n          assignedDevelopers: project.assignedDevelopers || []\n        })\n      });\n      if (response.ok) {\n        const newProject = await response.json();\n        console.log('Project created:', newProject);\n        fetchProjects(); // Refetch to ensure consistency\n      } else {\n        console.error('Failed to create project:', response.status);\n      }\n    } catch (error) {\n      console.error('Error creating project:', error);\n    }\n  };\n  const addMilestone = async (projectId, milestone) => {\n    try {\n      const response = await fetch(`http://localhost:8080/api/projects/${projectId}/milestones`, {\n        method: 'POST',\n        headers: getAuthHeaders(),\n        body: JSON.stringify({\n          title: milestone.title,\n          description: milestone.description,\n          dueDate: milestone.dueDate,\n          completed: false\n        })\n      });\n      if (response.ok) {\n        await fetchProjects();\n        // Find updated project from current projects state\n        const updatedProject = projects.find(p => p.id === projectId);\n        if (updatedProject) {\n          // Refetch the specific project to get updated milestones\n          const projectResponse = await fetch(`http://localhost:8080/api/projects/${projectId}`, {\n            headers: getAuthHeaders()\n          });\n          if (projectResponse.ok) {\n            const refreshedProject = await projectResponse.json();\n            setSelectedProject(refreshedProject);\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error creating milestone:', error);\n    }\n  };\n  const updateMilestone = async (milestoneId, updates) => {\n    try {\n      const response = await fetch(`http://localhost:8080/api/milestones/${milestoneId}`, {\n        method: 'PUT',\n        headers: getAuthHeaders(),\n        body: JSON.stringify(updates)\n      });\n      if (response.ok) {\n        var _updatedProject$miles;\n        await fetchProjects();\n        const updatedProjects = await fetch('http://localhost:8080/api/projects').then(r => r.json());\n        const updatedProject = updatedProjects.find(p => p.id === (selectedProject === null || selectedProject === void 0 ? void 0 : selectedProject.id));\n\n        // Check if all milestones are completed and update project status\n        if ((updatedProject === null || updatedProject === void 0 ? void 0 : (_updatedProject$miles = updatedProject.milestones) === null || _updatedProject$miles === void 0 ? void 0 : _updatedProject$miles.length) > 0) {\n          const allCompleted = updatedProject.milestones.every(m => m.completed);\n          if (allCompleted && updatedProject.status !== 'COMPLETED') {\n            await fetch(`http://localhost:8080/api/projects/${updatedProject.id}`, {\n              method: 'PUT',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                ...updatedProject,\n                status: 'COMPLETED'\n              })\n            });\n            await fetchProjects();\n            const finalProjects = await fetch('http://localhost:8080/api/projects').then(r => r.json());\n            setSelectedProject(finalProjects.find(p => p.id === (selectedProject === null || selectedProject === void 0 ? void 0 : selectedProject.id)));\n          } else {\n            setSelectedProject(updatedProject);\n          }\n        } else {\n          setSelectedProject(updatedProject);\n        }\n      }\n    } catch (error) {\n      console.error('Error updating milestone:', error);\n    }\n  };\n  const addTask = async (projectId, task) => {\n    try {\n      const response = await fetch(`http://localhost:8080/api/projects/${projectId}/tasks`, {\n        method: 'POST',\n        headers: getAuthHeaders(),\n        body: JSON.stringify(task)\n      });\n      if (response.ok) {\n        // If task is assigned to someone, add them as project team member\n        if (task.assignedToUserId) {\n          const assignedMember = teamMembers.find(m => m.userId === task.assignedToUserId);\n          if (assignedMember) {\n            await addTeamMember({\n              ...assignedMember,\n              projectId: projectId\n            });\n          }\n        }\n        await fetchProjects();\n        await fetchAllTasks();\n        await fetchTeamMembers();\n        const updatedProjects = await fetch('http://localhost:8080/api/projects').then(r => r.json());\n        const updatedProject = updatedProjects.find(p => p.id === projectId);\n        setSelectedProject(updatedProject);\n      }\n    } catch (error) {\n      console.error('Error creating task:', error);\n    }\n  };\n  const updateTask = async (taskId, updates) => {\n    try {\n      const response = await fetch(`http://localhost:8080/api/tasks/${taskId}`, {\n        method: 'PUT',\n        headers: getAuthHeaders(),\n        body: JSON.stringify(updates)\n      });\n      if (response.ok) {\n        // If task is assigned to someone, add them as project team member\n        if (updates.assignedToUserId && selectedProject) {\n          const assignedMember = teamMembers.find(m => m.userId === updates.assignedToUserId);\n          if (assignedMember) {\n            await addTeamMember({\n              ...assignedMember,\n              projectId: selectedProject.id\n            });\n          }\n        }\n        await fetchProjects();\n        await fetchAllTasks();\n        await fetchTeamMembers();\n        const updatedProjects = await fetch('http://localhost:8080/api/projects').then(r => r.json());\n        const updatedProject = updatedProjects.find(p => p.id === (selectedProject === null || selectedProject === void 0 ? void 0 : selectedProject.id));\n        setSelectedProject(updatedProject);\n      }\n    } catch (error) {\n      console.error('Error updating task:', error);\n    }\n  };\n  const deleteTask = async taskId => {\n    try {\n      const response = await fetch(`http://localhost:8080/api/tasks/${taskId}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        await fetchProjects();\n        await fetchAllTasks();\n        const updatedProjects = await fetch('http://localhost:8080/api/projects').then(r => r.json());\n        const updatedProject = updatedProjects.find(p => p.id === (selectedProject === null || selectedProject === void 0 ? void 0 : selectedProject.id));\n        setSelectedProject(updatedProject);\n      }\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  const handleLogin = userData => {\n    setUser(userData);\n    fetchProjects();\n    fetchAllTasks();\n    fetchTeamMembers();\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 12\n    }, this);\n  }\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(Login, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Project Management Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: currentView === 'dashboard' ? 'active' : '',\n          onClick: () => setCurrentView('dashboard'),\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: currentView === 'projects' ? 'active' : '',\n          onClick: () => setCurrentView('projects'),\n          children: \"Projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: currentView === 'milestones' ? 'active' : '',\n          onClick: () => setCurrentView('milestones'),\n          children: \"Milestones\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: currentView === 'tasks' ? 'active' : '',\n          onClick: () => setCurrentView('tasks'),\n          children: \"Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: currentView === 'team' ? 'active' : '',\n          onClick: () => setCurrentView('team'),\n          children: \"Team\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: '1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Notifications, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowProfile(!showProfile),\n            style: {\n              background: 'none',\n              border: '1px solid #e5e7eb',\n              padding: '0.5rem 1rem',\n              borderRadius: '6px',\n              cursor: 'pointer',\n              display: 'flex',\n              alignItems: 'center',\n              gap: '0.5rem',\n              color: '#374151'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: '0.9rem'\n              },\n              children: (user === null || user === void 0 ? void 0 : user.fullName) || (user === null || user === void 0 ? void 0 : user.username)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: '0.7rem'\n              },\n              children: \"\\u25BC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, this), showProfile && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'absolute',\n              top: '100%',\n              right: 0,\n              marginTop: '0.5rem',\n              background: 'white',\n              border: '1px solid #e5e7eb',\n              borderRadius: '6px',\n              boxShadow: '0 4px 12px rgba(0,0,0,0.1)',\n              minWidth: '200px',\n              zIndex: 1000\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: '1rem',\n                borderBottom: '1px solid #f3f4f6'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontWeight: '500',\n                  color: '#374151'\n                },\n                children: (user === null || user === void 0 ? void 0 : user.fullName) || (user === null || user === void 0 ? void 0 : user.username)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '0.8rem',\n                  color: '#9ca3af'\n                },\n                children: user === null || user === void 0 ? void 0 : user.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                localStorage.clear();\n                setUser(null);\n              },\n              style: {\n                width: '100%',\n                background: 'none',\n                border: 'none',\n                padding: '0.75rem 1rem',\n                textAlign: 'left',\n                cursor: 'pointer',\n                color: '#dc2626',\n                fontSize: '0.9rem'\n              },\n              children: \"Logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [currentView === 'dashboard' && /*#__PURE__*/_jsxDEV(Dashboard, {\n        projects: projects,\n        onNavigate: (view, filter) => {\n          setCurrentView(view);\n          setStatusFilter(filter);\n        },\n        onSelectProject: setSelectedProject\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 11\n      }, this), currentView === 'projects' && /*#__PURE__*/_jsxDEV(ProjectList, {\n        projects: statusFilter ? projects.filter(p => p.status === statusFilter) : projects,\n        onAddProject: addProject,\n        onSelectProject: project => {\n          setSelectedProject(project);\n          setCurrentView('milestones');\n        },\n        statusFilter: statusFilter,\n        onClearFilter: () => setStatusFilter(null),\n        teamMembers: teamMembers,\n        user: user,\n        onUpdateProject: updateProject\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 11\n      }, this), currentView === 'milestones' && /*#__PURE__*/_jsxDEV(MilestoneBoard, {\n        selectedProject: selectedProject,\n        allProjects: projects,\n        onAddMilestone: addMilestone,\n        onUpdateMilestone: updateMilestone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 11\n      }, this), currentView === 'tasks' && /*#__PURE__*/_jsxDEV(TaskBoard, {\n        selectedProject: selectedProject,\n        allTasks: allTasks,\n        teamMembers: teamMembers,\n        projects: projects,\n        onAddTask: addTask,\n        onUpdateTask: updateTask,\n        onDeleteTask: deleteTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 11\n      }, this), currentView === 'team' && /*#__PURE__*/_jsxDEV(TeamManagement, {\n        teamMembers: teamMembers,\n        selectedProject: selectedProject,\n        onAddTeamMember: addTeamMember,\n        onDeleteTeamMember: deleteTeamMember,\n        onFetchTeamMembers: fetchTeamMembers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 354,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jvEK9GRUvTKSa6AXFW0Rrzae2aY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ProjectList","MilestoneBoard","TaskBoard","TeamManagement","Dashboard","Notifications","Login","jsxDEV","_jsxDEV","App","_s","currentView","setCurrentView","projects","setProjects","tasks","setTasks","selectedProject","setSelectedProject","statusFilter","setStatusFilter","allTasks","setAllTasks","teamMembers","setTeamMembers","user","setUser","loading","setLoading","showProfile","setShowProfile","token","localStorage","getItem","username","fullName","fetchProjects","fetchAllTasks","fetchTeamMembers","getAuthHeaders","userRole","console","log","url","response","fetch","headers","ok","data","json","length","error","projectId","addTeamMember","member","existingMember","find","m","userId","method","body","JSON","stringify","deleteTeamMember","memberId","updateProject","projectData","status","addProject","project","name","description","startDate","endDate","createdBy","assignedDevelopers","newProject","addMilestone","milestone","title","dueDate","completed","updatedProject","p","id","projectResponse","refreshedProject","updateMilestone","milestoneId","updates","_updatedProject$miles","updatedProjects","then","r","milestones","allCompleted","every","finalProjects","addTask","task","assignedToUserId","assignedMember","updateTask","taskId","deleteTask","handleLogin","userData","children","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","className","onClick","style","display","alignItems","gap","position","background","border","padding","borderRadius","cursor","color","fontSize","top","right","marginTop","boxShadow","minWidth","zIndex","borderBottom","fontWeight","clear","width","textAlign","onNavigate","view","filter","onSelectProject","onAddProject","onClearFilter","onUpdateProject","allProjects","onAddMilestone","onUpdateMilestone","onAddTask","onUpdateTask","onDeleteTask","onAddTeamMember","onDeleteTeamMember","onFetchTeamMembers","_c","$RefreshReg$"],"sources":["C:/project-management-dashboard/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ProjectList from './components/ProjectList';\nimport MilestoneBoard from './components/MilestoneBoard';\nimport TaskBoard from './components/TaskBoard';\nimport TeamManagement from './components/TeamManagement';\nimport Dashboard from './components/Dashboard';\nimport Notifications from './components/Notifications';\nimport Login from './components/Login';\nimport './App.css';\n\nfunction App() {\n  const [currentView, setCurrentView] = useState('dashboard');\n  const [projects, setProjects] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [statusFilter, setStatusFilter] = useState(null);\n  const [allTasks, setAllTasks] = useState([]);\n  const [teamMembers, setTeamMembers] = useState([]);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [showProfile, setShowProfile] = useState(false);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const username = localStorage.getItem('username');\n    const fullName = localStorage.getItem('fullName');\n    \n    if (token && username) {\n      setUser({ token, username, fullName });\n      fetchProjects();\n      fetchAllTasks();\n      fetchTeamMembers();\n    }\n    setLoading(false);\n  }, []);\n\n  const getAuthHeaders = () => {\n    const token = localStorage.getItem('token');\n    return {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    };\n  };\n\n  const fetchProjects = async () => {\n    try {\n      const userRole = localStorage.getItem('userRole') || 'Admin';\n      const username = localStorage.getItem('username');\n      console.log('Fetching projects for:', username, 'with role:', userRole);\n      const url = `http://localhost:8080/api/projects?userId=${username}&role=${userRole}`;\n      \n      const response = await fetch(url, {\n        headers: getAuthHeaders()\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Fetched projects:', data.length);\n        setProjects(data);\n      }\n    } catch (error) {\n      console.error('Error fetching projects:', error);\n    }\n  };\n\n  const fetchAllTasks = async () => {\n    try {\n      const userRole = localStorage.getItem('userRole') || 'Admin';\n      const username = localStorage.getItem('username');\n      const url = `http://localhost:8080/api/tasks?userId=${username}&role=${userRole}`;\n      \n      const response = await fetch(url, {\n        headers: getAuthHeaders()\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setAllTasks(data);\n      }\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n\n  const fetchTeamMembers = async (projectId = null) => {\n    try {\n      let url = 'http://localhost:8080/api/team-members';\n      if (projectId) {\n        url += `?projectId=${projectId}`;\n      }\n      \n      console.log('Fetching team members from:', url);\n      const response = await fetch(url, {\n        headers: getAuthHeaders()\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Team members fetched:', data);\n        setTeamMembers(data);\n      }\n    } catch (error) {\n      console.error('Error fetching team members:', error);\n    }\n  };\n\n  const addTeamMember = async (member) => {\n    try {\n      // Check if member already exists for this project\n      const existingMember = teamMembers.find(m => \n        m.userId === member.userId && m.projectId === member.projectId\n      );\n      \n      if (!existingMember) {\n        const response = await fetch('http://localhost:8080/api/team-members', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(member),\n        });\n        if (response.ok) {\n          fetchTeamMembers();\n        }\n      }\n    } catch (error) {\n      console.error('Error creating team member:', error);\n    }\n  };\n\n  const deleteTeamMember = async (memberId) => {\n    try {\n      const response = await fetch(`http://localhost:8080/api/team-members/${memberId}`, {\n        method: 'DELETE',\n      });\n      if (response.ok) {\n        fetchTeamMembers();\n      }\n    } catch (error) {\n      console.error('Error deleting team member:', error);\n    }\n  };\n\n\n\n  const updateProject = async (projectId, projectData) => {\n    try {\n      const response = await fetch(`http://localhost:8080/api/projects/${projectId}`, {\n        method: 'PUT',\n        headers: getAuthHeaders(),\n        body: JSON.stringify(projectData),\n      });\n      \n      if (response.ok) {\n        fetchProjects();\n      } else {\n        console.error('Failed to update project:', response.status);\n      }\n    } catch (error) {\n      console.error('Error updating project:', error);\n    }\n  };\n\n  const addProject = async (project) => {\n    try {\n      console.log('Creating project:', project);\n      const username = localStorage.getItem('username');\n      const response = await fetch('http://localhost:8080/api/projects', {\n        method: 'POST',\n        headers: getAuthHeaders(),\n        body: JSON.stringify({\n          name: project.name,\n          description: project.description,\n          startDate: project.startDate || null,\n          endDate: project.endDate || null,\n          status: 'NEW',\n          createdBy: username,\n          assignedDevelopers: project.assignedDevelopers || []\n        }),\n      });\n      \n      if (response.ok) {\n        const newProject = await response.json();\n        console.log('Project created:', newProject);\n        fetchProjects(); // Refetch to ensure consistency\n      } else {\n        console.error('Failed to create project:', response.status);\n      }\n    } catch (error) {\n      console.error('Error creating project:', error);\n    }\n  };\n\n  const addMilestone = async (projectId, milestone) => {\n    try {\n      const response = await fetch(`http://localhost:8080/api/projects/${projectId}/milestones`, {\n        method: 'POST',\n        headers: getAuthHeaders(),\n        body: JSON.stringify({\n          title: milestone.title,\n          description: milestone.description,\n          dueDate: milestone.dueDate,\n          completed: false\n        }),\n      });\n      if (response.ok) {\n        await fetchProjects();\n        // Find updated project from current projects state\n        const updatedProject = projects.find(p => p.id === projectId);\n        if (updatedProject) {\n          // Refetch the specific project to get updated milestones\n          const projectResponse = await fetch(`http://localhost:8080/api/projects/${projectId}`, {\n            headers: getAuthHeaders()\n          });\n          if (projectResponse.ok) {\n            const refreshedProject = await projectResponse.json();\n            setSelectedProject(refreshedProject);\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error creating milestone:', error);\n    }\n  };\n\n  const updateMilestone = async (milestoneId, updates) => {\n    try {\n      const response = await fetch(`http://localhost:8080/api/milestones/${milestoneId}`, {\n        method: 'PUT',\n        headers: getAuthHeaders(),\n        body: JSON.stringify(updates),\n      });\n      if (response.ok) {\n        await fetchProjects();\n        const updatedProjects = await fetch('http://localhost:8080/api/projects').then(r => r.json());\n        const updatedProject = updatedProjects.find(p => p.id === selectedProject?.id);\n        \n        // Check if all milestones are completed and update project status\n        if (updatedProject?.milestones?.length > 0) {\n          const allCompleted = updatedProject.milestones.every(m => m.completed);\n          if (allCompleted && updatedProject.status !== 'COMPLETED') {\n            await fetch(`http://localhost:8080/api/projects/${updatedProject.id}`, {\n              method: 'PUT',\n              headers: { 'Content-Type': 'application/json' },\n              body: JSON.stringify({ ...updatedProject, status: 'COMPLETED' })\n            });\n            await fetchProjects();\n            const finalProjects = await fetch('http://localhost:8080/api/projects').then(r => r.json());\n            setSelectedProject(finalProjects.find(p => p.id === selectedProject?.id));\n          } else {\n            setSelectedProject(updatedProject);\n          }\n        } else {\n          setSelectedProject(updatedProject);\n        }\n      }\n    } catch (error) {\n      console.error('Error updating milestone:', error);\n    }\n  };\n\n  const addTask = async (projectId, task) => {\n    try {\n      const response = await fetch(`http://localhost:8080/api/projects/${projectId}/tasks`, {\n        method: 'POST',\n        headers: getAuthHeaders(),\n        body: JSON.stringify(task),\n      });\n      if (response.ok) {\n        // If task is assigned to someone, add them as project team member\n        if (task.assignedToUserId) {\n          const assignedMember = teamMembers.find(m => m.userId === task.assignedToUserId);\n          if (assignedMember) {\n            await addTeamMember({\n              ...assignedMember,\n              projectId: projectId\n            });\n          }\n        }\n        \n        await fetchProjects();\n        await fetchAllTasks();\n        await fetchTeamMembers();\n        const updatedProjects = await fetch('http://localhost:8080/api/projects').then(r => r.json());\n        const updatedProject = updatedProjects.find(p => p.id === projectId);\n        setSelectedProject(updatedProject);\n      }\n    } catch (error) {\n      console.error('Error creating task:', error);\n    }\n  };\n\n  const updateTask = async (taskId, updates) => {\n    try {\n      const response = await fetch(`http://localhost:8080/api/tasks/${taskId}`, {\n        method: 'PUT',\n        headers: getAuthHeaders(),\n        body: JSON.stringify(updates),\n      });\n      if (response.ok) {\n        // If task is assigned to someone, add them as project team member\n        if (updates.assignedToUserId && selectedProject) {\n          const assignedMember = teamMembers.find(m => m.userId === updates.assignedToUserId);\n          if (assignedMember) {\n            await addTeamMember({\n              ...assignedMember,\n              projectId: selectedProject.id\n            });\n          }\n        }\n        \n        await fetchProjects();\n        await fetchAllTasks();\n        await fetchTeamMembers();\n        const updatedProjects = await fetch('http://localhost:8080/api/projects').then(r => r.json());\n        const updatedProject = updatedProjects.find(p => p.id === selectedProject?.id);\n        setSelectedProject(updatedProject);\n      }\n    } catch (error) {\n      console.error('Error updating task:', error);\n    }\n  };\n\n  const deleteTask = async (taskId) => {\n    try {\n      const response = await fetch(`http://localhost:8080/api/tasks/${taskId}`, {\n        method: 'DELETE',\n      });\n      if (response.ok) {\n        await fetchProjects();\n        await fetchAllTasks();\n        const updatedProjects = await fetch('http://localhost:8080/api/projects').then(r => r.json());\n        const updatedProject = updatedProjects.find(p => p.id === selectedProject?.id);\n        setSelectedProject(updatedProject);\n      }\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n\n  const handleLogin = (userData) => {\n    setUser(userData);\n    fetchProjects();\n    fetchAllTasks();\n    fetchTeamMembers();\n  };\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!user) {\n    return <Login onLogin={handleLogin} />;\n  }\n\n  return (\n    <div className=\"app\">\n      <nav className=\"navbar\">\n        <h1>Project Management Dashboard</h1>\n        <div className=\"nav-buttons\">\n          <button \n            className={currentView === 'dashboard' ? 'active' : ''}\n            onClick={() => setCurrentView('dashboard')}\n          >\n            Dashboard\n          </button>\n          <button \n            className={currentView === 'projects' ? 'active' : ''}\n            onClick={() => setCurrentView('projects')}\n          >\n            Projects\n          </button>\n          <button \n            className={currentView === 'milestones' ? 'active' : ''}\n            onClick={() => setCurrentView('milestones')}\n          >\n            Milestones\n          </button>\n          <button \n            className={currentView === 'tasks' ? 'active' : ''}\n            onClick={() => setCurrentView('tasks')}\n          >\n            Tasks\n          </button>\n          <button \n            className={currentView === 'team' ? 'active' : ''}\n            onClick={() => setCurrentView('team')}\n          >\n            Team\n          </button>\n        </div>\n\n        <div style={{ display: 'flex', alignItems: 'center', gap: '1rem' }}>\n          <Notifications />\n          <div style={{ position: 'relative' }}>\n            <button \n              onClick={() => setShowProfile(!showProfile)}\n              style={{\n                background: 'none',\n                border: '1px solid #e5e7eb',\n                padding: '0.5rem 1rem',\n                borderRadius: '6px',\n                cursor: 'pointer',\n                display: 'flex',\n                alignItems: 'center',\n                gap: '0.5rem',\n                color: '#374151'\n              }}\n            >\n              <span style={{ fontSize: '0.9rem' }}>{user?.fullName || user?.username}</span>\n              <span style={{ fontSize: '0.7rem' }}>▼</span>\n            </button>\n            \n            {showProfile && (\n              <div style={{\n                position: 'absolute',\n                top: '100%',\n                right: 0,\n                marginTop: '0.5rem',\n                background: 'white',\n                border: '1px solid #e5e7eb',\n                borderRadius: '6px',\n                boxShadow: '0 4px 12px rgba(0,0,0,0.1)',\n                minWidth: '200px',\n                zIndex: 1000\n              }}>\n                <div style={{ padding: '1rem', borderBottom: '1px solid #f3f4f6' }}>\n                  <div style={{ fontWeight: '500', color: '#374151' }}>{user?.fullName || user?.username}</div>\n                  <div style={{ fontSize: '0.8rem', color: '#9ca3af' }}>{user?.username}</div>\n                </div>\n                <button \n                  onClick={() => {\n                    localStorage.clear();\n                    setUser(null);\n                  }}\n                  style={{\n                    width: '100%',\n                    background: 'none',\n                    border: 'none',\n                    padding: '0.75rem 1rem',\n                    textAlign: 'left',\n                    cursor: 'pointer',\n                    color: '#dc2626',\n                    fontSize: '0.9rem'\n                  }}\n                >\n                  Logout\n                </button>\n              </div>\n            )}\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"main-content\">\n        {currentView === 'dashboard' && (\n          <Dashboard \n            projects={projects} \n            onNavigate={(view, filter) => {\n              setCurrentView(view);\n              setStatusFilter(filter);\n            }}\n            onSelectProject={setSelectedProject}\n          />\n        )}\n        {currentView === 'projects' && (\n          <ProjectList \n            projects={statusFilter ? projects.filter(p => p.status === statusFilter) : projects}\n            onAddProject={addProject}\n            onSelectProject={(project) => {\n              setSelectedProject(project);\n              setCurrentView('milestones');\n            }}\n            statusFilter={statusFilter}\n            onClearFilter={() => setStatusFilter(null)}\n            teamMembers={teamMembers}\n            user={user}\n            onUpdateProject={updateProject}\n          />\n        )}\n        {currentView === 'milestones' && (\n          <MilestoneBoard \n            selectedProject={selectedProject}\n            allProjects={projects}\n            onAddMilestone={addMilestone}\n            onUpdateMilestone={updateMilestone}\n          />\n        )}\n        {currentView === 'tasks' && (\n          <TaskBoard \n            selectedProject={selectedProject}\n            allTasks={allTasks}\n            teamMembers={teamMembers}\n            projects={projects}\n            onAddTask={addTask}\n            onUpdateTask={updateTask}\n            onDeleteTask={deleteTask}\n          />\n        )}\n        {currentView === 'team' && (\n          <TeamManagement \n            teamMembers={teamMembers}\n            selectedProject={selectedProject}\n            onAddTeamMember={addTeamMember}\n            onDeleteTeamMember={deleteTeamMember}\n            onFetchTeamMembers={fetchTeamMembers}\n          />\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}