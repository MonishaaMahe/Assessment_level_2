{"ast":null,"code":"var _jsxFileName = \"C:\\\\project-management-dashboard\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ProjectList from './components/ProjectList';\nimport MilestoneBoard from './components/MilestoneBoard';\nimport Dashboard from './components/Dashboard';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentView, setCurrentView] = useState('dashboard');\n  const [projects, setProjects] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  const [selectedProject, setSelectedProject] = useState(null);\n  useEffect(() => {\n    fetchProjects();\n  }, []);\n  const fetchProjects = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/api/projects');\n      const data = await response.json();\n      setProjects(data);\n    } catch (error) {\n      console.error('Error fetching projects:', error);\n    }\n  };\n  const addProject = async project => {\n    try {\n      const response = await fetch('http://localhost:8080/api/projects', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: project.name,\n          description: project.description,\n          startDate: project.startDate,\n          endDate: project.endDate,\n          status: 'NEW'\n        })\n      });\n      if (response.ok) {\n        fetchProjects();\n      }\n    } catch (error) {\n      console.error('Error creating project:', error);\n    }\n  };\n  const addMilestone = async (projectId, milestone) => {\n    try {\n      const response = await fetch(`http://localhost:8080/api/projects/${projectId}/milestones`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title: milestone.title,\n          description: milestone.description,\n          dueDate: milestone.dueDate,\n          completed: false\n        })\n      });\n      if (response.ok) {\n        fetchProjects();\n      }\n    } catch (error) {\n      console.error('Error creating milestone:', error);\n    }\n  };\n  const updateMilestone = async (milestoneId, updates) => {\n    try {\n      const response = await fetch(`http://localhost:8080/api/milestones/${milestoneId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updates)\n      });\n      if (response.ok) {\n        fetchProjects();\n      }\n    } catch (error) {\n      console.error('Error updating milestone:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Project Management Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: currentView === 'dashboard' ? 'active' : '',\n          onClick: () => setCurrentView('dashboard'),\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: currentView === 'projects' ? 'active' : '',\n          onClick: () => setCurrentView('projects'),\n          children: \"Projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: currentView === 'milestones' ? 'active' : '',\n          onClick: () => setCurrentView('milestones'),\n          children: \"Milestones\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [currentView === 'dashboard' && /*#__PURE__*/_jsxDEV(Dashboard, {\n        projects: projects\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), currentView === 'projects' && /*#__PURE__*/_jsxDEV(ProjectList, {\n        projects: projects,\n        onAddProject: addProject,\n        onSelectProject: project => {\n          setSelectedProject(project);\n          setCurrentView('milestones');\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), currentView === 'milestones' && /*#__PURE__*/_jsxDEV(MilestoneBoard, {\n        selectedProject: selectedProject,\n        onAddMilestone: addMilestone,\n        onUpdateMilestone: updateMilestone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/Unb487wPkvOddWs5dQC8shjo4A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ProjectList","MilestoneBoard","Dashboard","jsxDEV","_jsxDEV","App","_s","currentView","setCurrentView","projects","setProjects","tasks","setTasks","selectedProject","setSelectedProject","fetchProjects","response","fetch","data","json","error","console","addProject","project","method","headers","body","JSON","stringify","name","description","startDate","endDate","status","ok","addMilestone","projectId","milestone","title","dueDate","completed","updateMilestone","milestoneId","updates","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onAddProject","onSelectProject","onAddMilestone","onUpdateMilestone","_c","$RefreshReg$"],"sources":["C:/project-management-dashboard/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ProjectList from './components/ProjectList';\nimport MilestoneBoard from './components/MilestoneBoard';\nimport Dashboard from './components/Dashboard';\nimport './App.css';\n\nfunction App() {\n  const [currentView, setCurrentView] = useState('dashboard');\n  const [projects, setProjects] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  const [selectedProject, setSelectedProject] = useState(null);\n\n  useEffect(() => {\n    fetchProjects();\n  }, []);\n\n  const fetchProjects = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/api/projects');\n      const data = await response.json();\n      setProjects(data);\n    } catch (error) {\n      console.error('Error fetching projects:', error);\n    }\n  };\n\n\n\n  const addProject = async (project) => {\n    try {\n      const response = await fetch('http://localhost:8080/api/projects', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          name: project.name,\n          description: project.description,\n          startDate: project.startDate,\n          endDate: project.endDate,\n          status: 'NEW'\n        }),\n      });\n      if (response.ok) {\n        fetchProjects();\n      }\n    } catch (error) {\n      console.error('Error creating project:', error);\n    }\n  };\n\n  const addMilestone = async (projectId, milestone) => {\n    try {\n      const response = await fetch(`http://localhost:8080/api/projects/${projectId}/milestones`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          title: milestone.title,\n          description: milestone.description,\n          dueDate: milestone.dueDate,\n          completed: false\n        }),\n      });\n      if (response.ok) {\n        fetchProjects();\n      }\n    } catch (error) {\n      console.error('Error creating milestone:', error);\n    }\n  };\n\n  const updateMilestone = async (milestoneId, updates) => {\n    try {\n      const response = await fetch(`http://localhost:8080/api/milestones/${milestoneId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(updates),\n      });\n      if (response.ok) {\n        fetchProjects();\n      }\n    } catch (error) {\n      console.error('Error updating milestone:', error);\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <nav className=\"navbar\">\n        <h1>Project Management Dashboard</h1>\n        <div className=\"nav-buttons\">\n          <button \n            className={currentView === 'dashboard' ? 'active' : ''}\n            onClick={() => setCurrentView('dashboard')}\n          >\n            Dashboard\n          </button>\n          <button \n            className={currentView === 'projects' ? 'active' : ''}\n            onClick={() => setCurrentView('projects')}\n          >\n            Projects\n          </button>\n          <button \n            className={currentView === 'milestones' ? 'active' : ''}\n            onClick={() => setCurrentView('milestones')}\n          >\n            Milestones\n          </button>\n        </div>\n      </nav>\n\n      <main className=\"main-content\">\n        {currentView === 'dashboard' && (\n          <Dashboard projects={projects} />\n        )}\n        {currentView === 'projects' && (\n          <ProjectList \n            projects={projects} \n            onAddProject={addProject}\n            onSelectProject={(project) => {\n              setSelectedProject(project);\n              setCurrentView('milestones');\n            }}\n          />\n        )}\n        {currentView === 'milestones' && (\n          <MilestoneBoard \n            selectedProject={selectedProject}\n            onAddMilestone={addMilestone}\n            onUpdateMilestone={updateMilestone}\n          />\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}